---
- name: Load distro variables
  ansible.builtin.include_vars: '{{ ansible_distribution | lower }}.yaml'

- name: Execute distro-specific tasks
  ansible.builtin.include_tasks: '{{ ansible_distribution | lower }}.yaml'

# TODO: Currently, we are deploying only podman containers
#       The following would also be desirable:
#       - Docker
#       - AMI
#       - Helm
- block:
    - block:
        - name: Create directories
          ansible.builtin.file:
            path: '{{ pmm_container_env_file | dirname }}'
            state: directory
            owner: root
            group: root
            mode: u=rwX,g=rX,o=X

        - name: Manage the container environment file
          ansible.builtin.template:
            src: env-pmm-server.j2
            dest: '{{ pmm_container_env_file }}'
            owner: root
            group: root
            mode: u=rw,a=r
          register: pmm_container_manage_env_file
      become: true
      tags:
        - sudo

    - name: Configure the containerisation enviroment
      ansible.builtin.include_role:
        name: container
      vars:
        container_env_file: '{{ pmm_container_env_file }}'
        container_force_reload: '{{ pmm_container_manage_env_file.changed | bool }}'
        container_image: '{{ pmm_container_image_repo }}/pmm-server:{{ pmm_version }}'
        container_port: '{{ pmm_container_port }}'
        container_service:
          name: pmm-server
          extra_args: '{{ pmm_container_extra_args }}'
        container_volume: '{{ pmm_container_volume }}'
  when: ([pmm_deploy_using] | intersect(['podman']) | length > 0)

- name: Verify server status
  ansible.builtin.include_tasks: check-ready.yaml
  tags:
    - always

- name: Verify API access
  ansible.builtin.include_tasks: api-assertions.yaml
  tags:
    - always

- name: Manage users
  ansible.builtin.include_tasks: manage-users.yaml

- name: Manage DBaaS
  ansible.builtin.include_tasks: dbaas.yaml

- name: Grafana Alerting
  ansible.builtin.include_tasks: grafana-alerting.yaml
  tags:
    - alerting
  when: ((pmm_setup_alerting and pmm_pagerduty_token | string is regex("^[0-9a-zA-Z]{32}$")) and
         (pmm_server_version.json["version"] is defined and pmm_server_version.json["version"] is version_compare('2.31.0', operator='>=', strict=True)))
...
